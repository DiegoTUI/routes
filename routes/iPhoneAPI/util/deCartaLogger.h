//
//  deCartaLogger.h
//  iPhoneApp
//
//  Created by Z.S. on 2/9/11.
//  Copyright 2011 deCarta, Inc. All rights reserved.
//

#ifndef DECARTALOGGER_H
#define DECARTALOGGER_H

#import <Foundation/Foundation.h>

/*!
 * @ingroup Util
 * This enumerated type is used to define the level of error and warning
 * output generated by the deCarta iPhone API. Use these values to set the
 * LOG_LEVEL parameter of the g_config global configuration structure.
 */
enum
{
	LOG_LEVEL_DEBUG = 4, /**< Debug - Report all log messages */
	LOG_LEVEL_INFO = 3, /**< Info - Report information and higher messages */
	LOG_LEVEL_WARN = 2, /**< Only report warnings and errors */
	LOG_LEVEL_FATAL = 1, /**< Only report critical errors */
	LOG_LEVEL_NONE = 0 /**< Disable message logging */
};

/*!
 * @internal This class is only used inside the API.
 * @brief Class for logging errors and warnings
 */
@interface deCartaLogger : NSObject {

}
/*! Generates webservices req & res. */
+(void)debugws:(NSData *) inData tag:(NSString *)tag;

/*! Generates a debug-level log message. */
+(void)debug:(NSString *) inMessage;

/*! Generates an info-level log message. */
+(void)info:(NSString *) inMessage;

/*! Generates a warning-level log message. */
+(void)warn:(NSString *) inMessage;

/*! Generates a fatal-level log message. */
+(void)fatal: (NSString *) inMessage;

/*! Get the recent logged messages. */
+(NSArray *)getContent;

@end

#endif
